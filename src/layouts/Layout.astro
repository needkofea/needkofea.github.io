---
interface Props {
    title: string;

    fw?: boolean;
    fh?: boolean;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Astro description" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body class:list={[Astro.props.fw ? "fw" : "", Astro.props.fh ? "fh" : ""]}>
        <slot />
    </body>
</html>
<style is:global>
    :root {
        --accent: 136, 58, 234;
        --accent-light: 224, 204, 250;
        --accent-dark: 49, 10, 101;
        --accent-gradient: linear-gradient(
            45deg,
            rgb(var(--accent)),
            rgb(var(--accent-light)) 30%,
            white 60%
        );
        transition: all 200ms ease;
        color: white;
    }

    @media only screen and (max-width: 900px) {
        :root {
            font-size: 0.8rem;
        }
    }
    @media only screen and (max-width: 800px) {
        :root {
            font-size: 0.7rem;
        }
    }
    @media only screen and (max-width: 600px) {
        :root {
            font-size: 0.6rem;
        }
    }


    * {
        box-sizing: border-box;
    }

    body {
        margin: 0;
        display: flex;
        overflow-y: auto;
        overflow-x: hidden;
    }
    html {
        font-family: system-ui, sans-serif;
        background: #13151a;
    }
    code {
        font-family:
            Menlo,
            Monaco,
            Lucida Console,
            Liberation Mono,
            DejaVu Sans Mono,
            Bitstream Vera Sans Mono,
            Courier New,
            monospace;
    }
    /* Expands size to parent */
    .expand-size {
        width: 100%;
        height: 100%;
    }
</style>
<style>
    .fw {
        width: 100vw;
    }
    .fh {
        height: 100vh;
    }
</style>
